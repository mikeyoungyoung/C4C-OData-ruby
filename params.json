{"name":"C4c-odata-ruby","tagline":"Example use of SAP C4C OData services with a ruby Sinatra & ruby_odata App","body":"# Sinatra Application to Query SAP C4C OData services\r\n\r\nA simple Ruby application illustrating usage of SAP Cloud for Customer OData Services using [Sinatra](http://www.sinatrarb.com) and [Ruby_OData](https://github.com/visoft/ruby_odata).  A live version \r\nis available on [Heroku](https://c4c-odata-ruby.herokuapp.com/)\r\n\r\n## Requirements\r\n\r\nThe only requirement of this application is [Bundler](http://bundler.io). All other dependencies can be installed with:\r\n\r\n    bundle install\r\n\r\nAdditionally, you must have access to an SAP Cloud for Customer Tenant\r\n\r\n## Basic Configuration\r\n\r\nWhile this obvisouly isn't the most secure way to connect, this application simply provides \r\nhard-coded root service and authentication credentials.  More security could be added by the \r\nuse of OAuth in C4C.  The following is a snippet from lines 10 & 11 of app.rb.  Replace all XXXXXX \r\nwith your specific details\r\n\r\n    $root_svc = \"https://myXXXXXX.crm.ondemand.com/sap/byd/odata/v1/C4C.SVC\"\r\n    $svc = OData::Service.new $root_svc, { :username => \"<user name>\", :password=> \"<password>\" }\r\n\r\n## Running the Application\r\n\r\nOnce verified that ruby is on your local machine, navigate to the directory containing app.rb \r\nand run\r\n\r\n    ruby app.rb\r\n\r\nThen open a browser and go to\r\n\r\n    localhost:4567\r\n\r\nThe application can also be run on your PaaS provider of choice so longs as they provide support \r\nfor Sinatra Applications\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}